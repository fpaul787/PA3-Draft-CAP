#pragma once
#include <gl/glut.h>
#include <math.h>
#define X_MAX 600
#define Y_MAX 400
#define VERTEX_NUM 101
#define POLYGON_NUM 100
#define X_POSITION 200
#define Y_POSITION 200
#define PI 3.14159265
#define X_SPEED 0.03//absolute value of polygon speed along x-axis
#define Y_SPEED 0.02//absolute value of polygon speed along y-axis
#define ROTATION_SPEED 0.02//degrees
#define BOUNCE_BACK_PERIOD 2000.0
#define SHRINK_WHEN_BOUNCE .15//ratio between 0 and 1
typedef struct {
    GLfloat r, g, b;
} RGBColor;
enum Movement {
    NONE = 0,
    UP = 1,
    DOWN = 2,
    RIGHT = 4,
    LEFT = 8,
    CCW_ROTATE = 16,
    CW_ROTATE = 32,
    VERT_GROWTH = 64,
    VERT_SHRINK = 128,
    HOR_GROWTH = 256,
    HOR_SHRINK = 512
};
enum Pattern{
    SOLID = 0,
    FLY = 1,
    HATCHED = 2,
    HALF_TONE = 3
};
typedef struct {
    GLfloat r, g, b, a;
} RGBAColor;
typedef struct {
    int x, y;
    GLfloat r, g, b, a;//rgba fill color
    GLfloat br, bg, bb, ba;//rgba border color
} Vertex;
typedef struct {
    int centroidX, centroidY;
    Pattern fillPattern;
    unsigned int borderPattern;
    double tx, ty,//shift vector
        rtheta, //rotation angle
        sx, sy;//scale factor
    Movement mode;//current movement
    Movement pastMode;//movement before bouncing
    Vertex *vertices;//vertex list
}ShadedPolygon;
void polygonCentroid2(int polygonIndex, int* x, int* y);
void polygonContainingRectangle(int polygonIndex, double* xFrom, double* xTo, double* yFrom, double* yTo);
void drawPolygon(int polygonIndex);
extern RGBAColor borderColor[VERTEX_NUM];
extern RGBAColor convexFillColor[VERTEX_NUM];
extern Pattern fillPattern;
extern unsigned int borderPattern;
extern ShadedPolygon polygons[POLYGON_NUM];
static GLubyte fly[] = {//1024 bits, 128 bytes//represents a mask
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x80, 0x01, 0xC0, 0x06, 0xC0, 0x03, 0x60,
    0x04, 0x60, 0x06, 0x20, 0x04, 0x30, 0x0C, 0x20,
    0x04, 0x18, 0x18, 0x20, 0x04, 0x0C, 0x30, 0x20,
    0x04, 0x06, 0x60, 0x20, 0x44, 0x03, 0xC0, 0x22,
    0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
    0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
    0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
    0x66, 0x01, 0x80, 0x66, 0x33, 0x01, 0x80, 0xCC,
    0x19, 0x81, 0x81, 0x98, 0x0C, 0xC1, 0x83, 0x30,
    0x07, 0xe1, 0x87, 0xe0, 0x03, 0x3f, 0xfc, 0xc0,
    0x03, 0x31, 0x8c, 0xc0, 0x03, 0x33, 0xcc, 0xc0,
    0x06, 0x64, 0x26, 0x60, 0x0c, 0xcc, 0x33, 0x30,
    0x18, 0xcc, 0x33, 0x18, 0x10, 0xc4, 0x23, 0x08,
    0x10, 0x63, 0xC6, 0x08, 0x10, 0x30, 0x0c, 0x08,
    0x10, 0x18, 0x18, 0x08, 0x10, 0x00, 0x00, 0x08 };
static GLubyte HorHatch[] = {
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff,
0xff, 0x00, 0xff, 0x00,
0x00, 0xff, 0x00, 0xff
};
static GLubyte Solid[] = {
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff,0xff, 0xff, 0xff, 0xff
};
static GLubyte halftone[] = {
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
    0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55 };
